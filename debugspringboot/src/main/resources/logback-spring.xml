<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty scope="context" name="ServerIP" source="spring.cloud.client.ipAddress" defaultValue="0.0.0.0"/>
    <springProperty scope="context" name="ServerPort" source="server.port" defaultValue="0000"/>
    <springProperty scope="context" name="KafkaHost" source="logback.kafka.producer.broker.connect" defaultValue="0.0.0.0:9092"/>
    <springProperty scope="context" name="applicationName" source="spring.application.name" defaultValue="log"/>
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint}  %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta}
    %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />

    <!-- 控制台日志 -->
    <appender name="StdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>true</withJansi>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 按照每天生成常规日志文件 -->
    <appender name="FileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${applicationName}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>logs/${applicationName}.log.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!--保留时间,单位:月-->
            <maxHistory>3</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 10MB -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!-- 将日志输出到Kafka -->
    <!--<appender name="KafkaAppender" class="com.github.danielwegener.logback.kafka.KafkaAppender">-->
        <!--<encoder class="com.github.danielwegener.logback.kafka.encoding.LayoutKafkaMessageEncoder">-->
            <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
                <!--<pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
            <!--</layout>-->
        <!--</encoder>-->
        <!--<topic>pms-log</topic>-->
        <!--<keyingStrategy class="com.github.danielwegener.logback.kafka.keying.RoundRobinKeyingStrategy"/>-->
        <!--<deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy"/>-->
        <!--&lt;!&ndash;<producerConfig>bootstrap.servers=192.168.1.11:9092</producerConfig>&ndash;&gt;-->
        <!--<producerConfig>bootstrap.servers=${KafkaHost}</producerConfig>-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>INFO</level>-->
        <!--</filter>-->
        <!--<appender-ref ref="StdoutAppender"/>-->
    <!--</appender>-->

    <!--TRACE DEBUG INFO WARN ERROR ALL OFF-->
    <root level="INFO">
        <appender-ref ref="StdoutAppender"/>
        <appender-ref ref="FileAppender"/>
        <!--
        由于我们的Kafka服务器连接地址信息在zookeeper中,所以,root中不能使用KafkaAppender,
        否则,就需要在启动应用时指定Kafka地址信息,如:&#45;&#45;(两个横杠)logback.kafka.producer.broker.connect=192.168.1.11:9092
        同时,由于root中没有kafkaAppender,所以下面需要指定那个包的日志应该输出到kafka中。

        说明:日志输出到kafka是为了配合日志易使用
        -->
        <!--<appender-ref ref="KafkaAppender"/>-->
    </root>

    <logger name="org" level="info" additivity="false">
        <appender-ref ref="StdoutAppender"/>
        <appender-ref ref="FileAppender"/>
    </logger>

    <logger name="com" level="info" additivity="false">
        <appender-ref ref="StdoutAppender"/>
        <!--<appender-ref ref="KafkaAppender"/>-->
        <appender-ref ref="FileAppender"/>
    </logger>

</configuration>